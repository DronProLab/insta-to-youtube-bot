import os
import telebot
import yt_dlp
import traceback
from flask import Flask
import threading
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload
from auth import get_authenticated_service

# üîê –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å TELEGRAM_TOKEN
bot = telebot.TeleBot(TOKEN)

# üìÅ –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ
SAVE_DIR = "downloads"
os.makedirs(SAVE_DIR, exist_ok=True)

# üîΩ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ –∏–∑ Instagram
def download_instagram_video(url):
    try:
        ydl_opts = {
            'outtmpl': f'{SAVE_DIR}/%(upload_date)s_%(id)s.%(ext)s',
            'format': 'mp4',
            'quiet': True,
        }
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
            description = info.get("description", "")
        return filename, description
    except Exception as e:
        raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")

# ‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ YouTube
def upload_to_youtube(video_path, description):
    try:
        youtube = get_authenticated_service()
        body = {
            'snippet': {
                'title': os.path.basename(video_path).replace("_", " "),
                'description': description,
                'tags': ['Instagram', 'shorts'],
                'categoryId': '22'
            },
            'status': {
                'privacyStatus': 'public'
            }
        }
        media = MediaFileUpload(video_path, mimetype='video/mp4', resumable=True)
        request = youtube.videos().insert(part='snippet,status', body=body, media_body=media)
        response = request.execute()
        return response.get("id")
    except Exception as e:
        raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")

# üßæ –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
@bot.message_handler(commands=["start"])
def welcome(msg):
    bot.send_message(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Instagram-–≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ YouTube.")

# üîó –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
@bot.message_handler(func=lambda m: m.text and "instagram.com" in m.text)
def handle_instagram(msg):
    chat_id = msg.chat.id
    url = msg.text.strip()
    try:
        bot.send_message(chat_id, "üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
        video_path, description = download_instagram_video(url)

        bot.send_message(chat_id, "üöÄ –ó–∞–≥—Ä—É–∂–∞—é –Ω–∞ YouTube...")
        youtube_id = upload_to_youtube(video_path, description)

        bot.send_message(chat_id, f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ! https://youtube.com/watch?v={youtube_id}")

        if os.path.exists(video_path):
            os.remove(video_path)
    except Exception as e:
        error_text = traceback.format_exc()
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞:\n{str(e)}")

# üåê Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (—á—Ç–æ–±—ã Web Service –Ω–µ –∑–∞—Å—ã–ø–∞–ª)
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is alive!"

def run_flask():
    app.run(host='0.0.0.0', port=10000)

# üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∏ Flask, –∏ –±–æ—Ç–∞
if __name__ == '__main__':
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.start()
    bot.polling(none_stop=True)
